{"version":3,"sources":["Timer.tsx","App.tsx","index.tsx"],"names":["Timer","ms","startTime","stopTime","useState","elapsed","setElapsed","useEffect","intervalId","undefined","getTime","window","setInterval","now","Date","clearInterval","className","Math","round","toFixed","drawTile","width","text","ctx","radius","deg90","PI","deg180","fillStyle","beginPath","arc","fill","font","textBaseline","textAlign","fillText","generateRandomGrid","numbers","i","length","j","floor","random","temp","grid","0","1","2","3","shift","App","canvasRef","useRef","size","innerHeight","gridState","setGridState","setStartTime","setStopTime","moveCount","setMoveCount","canvas","current","clientWidth","height","clientHeight","getContext","fillRect","padding","tileWidth","row","translate","col","setTransform","drawGrid","handleKeyDown","event","includes","key","c","oldGrid","findEmptySlot","newGrid","v","h","solved","expected","document","addEventListener","removeEventListener","style","onClick","ref","href","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.aef10fda.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\n\ninterface TimerProps {\n  startTime?: Date,\n  stopTime?: Date\n}\n\nfunction formatElapsed(ms: number) {\n  return (Math.round(ms / 100) / 10).toFixed(1);\n}\n\nfunction Timer ({ startTime, stopTime }: TimerProps) {\n  const [elapsed, setElapsed] = useState(0);\n\n  useEffect(() => {\n    let intervalId: number | undefined = undefined;\n    if (startTime) {\n      if (!stopTime) {\n        intervalId = window.setInterval(() => {\n          const now = new Date().getTime();\n          setElapsed(now - startTime.getTime());\n        }, 50);\n      } else {\n        setElapsed(stopTime.getTime() - startTime.getTime());\n      }\n    } else {\n      setElapsed(0);\n    }\n\n    return () => clearInterval(intervalId)\n  }, [startTime, stopTime]);\n\n  return (\n    <>\n      <div><strong>Time</strong></div>\n      <div className=\"TimerElapsed\">{formatElapsed(elapsed)}</div>\n    </>\n  );\n}\n\nexport default Timer;\n","import React, { useEffect, useState, useRef } from 'react';\n\nimport './App.css';\n\nimport Timer from './Timer';\n\ninterface Row {\n  0: number | null | undefined,\n  1: number | null | undefined,\n  2: number | null | undefined,\n  3: number | null | undefined\n}\n\ninterface Grid {\n  0: Row,\n  1: Row,\n  2: Row,\n  3: Row\n}\n\nfunction drawTile(width: number, text: string, ctx: CanvasRenderingContext2D) {\n  const radius = 24;\n  const deg90 = Math.PI / 2;\n  const deg180 = Math.PI;\n\n  ctx.fillStyle = '#4438CF';\n\n  ctx.beginPath();\n  // top left corner\n  ctx.arc(radius, radius, radius, deg180, -1 * deg90);\n  // top right corner\n  ctx.arc(width - radius, radius, radius, -1 * deg90, 0);\n  // bottom right corner\n  ctx.arc(width - radius, width - radius, radius, 0, deg90);\n  // bottom left corner\n  ctx.arc(radius, width - radius, radius, deg90, deg180);\n  ctx.fill();\n\n  ctx.font = '64px -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen';\n  ctx.textBaseline = 'middle';\n  ctx.textAlign = 'center';\n  ctx.fillStyle = 'white';\n  ctx.fillText(text, width / 2, width / 2);\n}\n\nfunction drawGrid(size: number, gridState: any, ctx: CanvasRenderingContext2D) {\n  const padding = 0.03 * size;\n  const drawnArea = size - (5 * padding);\n  const tileWidth = drawnArea / 4;\n\n  for (let row = 0; row < 4; row += 1) {\n    ctx.translate(padding, (row + 1) * padding + row * tileWidth);\n\n    for (let col = 0; col < 4; col += 1) {\n      if (gridState[row][col] !== null) {\n        drawTile(tileWidth, gridState[row][col], ctx);\n      }\n\n      ctx.translate(tileWidth + padding, 0);\n    }\n\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n  }\n}\n\nfunction generateRandomGrid() : Grid {\n  const numbers = [\n    1, 2, 3, 4,\n    5, 6, 7, 8,\n    9, 10, 11, 12,\n    13, 14, 15, null\n  ];\n\n  // fisher yates shuffle, preserving empty slot\n  for (let i = numbers.length - 2; i > 0; i -= 1) {\n    const j = Math.floor(Math.random() * i);\n    const temp = numbers[i];\n    numbers[i] = numbers[j];\n    numbers[j] = temp;\n  }\n\n  const grid: Grid = {\n    0: {} as Row,\n    1: {} as Row,\n    2: {} as Row,\n    3: {} as Row\n  }\n\n  for (let i = 0; i < 4; i += 1) {\n    for (let j = 0; j < 4; j += 1) {\n      grid[i as keyof Grid][j as keyof Grid] = numbers.shift();\n    }\n  }\n\n  return grid;\n}\n\nfunction App() {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const size = Math.floor(window.innerHeight * 0.5);\n\n  const [gridState, setGridState] = useState(generateRandomGrid());\n  const [startTime, setStartTime] = useState<Date | undefined>();\n  const [stopTime, setStopTime] = useState<Date | undefined>();\n  const [moveCount, setMoveCount] = useState<number>(0);\n\n  const findEmptySlot = (grid: Grid) : number[] => {\n    for (let i = 0; i < 4; i += 1) {\n      for (let j = 0; j < 4; j += 1) {\n        if (grid[i as keyof Grid][j as keyof Grid] === null) {\n          return [i, j];\n        }\n      }\n    }\n\n    return [3, 3];\n  }\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (canvas) {\n      canvas.width = 2 * canvas.clientWidth;\n      canvas.height = 2 * canvas.clientHeight;\n      const ctx = canvas.getContext('2d');\n      if (ctx) {\n        ctx.fillStyle = '#D9D9D9';\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n        drawGrid(size * 2, gridState, ctx);\n      }\n    }\n  }, [gridState, size]);\n\n  const handleKeyDown = (event: KeyboardEvent) => {\n    // do nothing when the timer has stopped\n    if (stopTime) { return }\n\n    const arrowKeys = ['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'];\n    if (arrowKeys.includes(event.key)) {\n      setMoveCount((c) => c + 1)\n      if (!startTime) {\n        setStartTime(new Date());\n      }\n    }\n    setGridState((oldGrid) => {\n      let [row, col] = findEmptySlot(oldGrid);\n      const newGrid = {\n        0: { ...oldGrid[0] },\n        1: { ...oldGrid[1] },\n        2: { ...oldGrid[2] },\n        3: { ...oldGrid[3] }\n      };\n\n      let [v, h] = [0, 0];\n      if (event.key === 'ArrowUp' && row !== 3) {\n        v = 1;\n      } else if (event.key === 'ArrowDown' && row !== 0) {\n        v = -1;\n      } else if (event.key === 'ArrowLeft' && col !== 3) {\n        h = 1;\n      } else if (event.key === 'ArrowRight' && col !== 0) {\n        h = -1;\n      }\n\n      newGrid[row as keyof Grid][col as keyof Grid] = (\n        newGrid[row + v as keyof Grid][col + h as keyof Grid]\n      );\n      newGrid[row + v as keyof Grid][col + h as keyof Grid] = null;\n\n      let solved = true;\n      for (let i = 0; i < 4; i += 1) {\n        for (let j = 0; j < 4; j += 1) {\n          let expected: number | null = (4 * i) + (j + 1);\n          if (expected === 16) { expected = null }\n          if (newGrid[i as keyof Grid][j as keyof Grid] !== expected) {\n            solved = false;\n          }\n        }\n      }\n      if (solved) {\n        setStopTime(new Date());\n      }\n\n      return newGrid;\n    });\n  };\n\n  useEffect(() => {\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    }\n  });\n\n  function randomizeGrid() {\n    setStartTime(undefined);\n    setStopTime(undefined);\n    setMoveCount(0);\n    setGridState(generateRandomGrid());\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"TimerContainer\">\n        <Timer startTime={startTime} stopTime={stopTime} />\n      </div>\n      <div className=\"MovesContainer\">\n        <div><strong>Moves</strong></div>\n        <div className=\"MoveCount\">{moveCount}</div>\n      </div>\n      <div className=\"ButtonRow\" style={{ width: size }}>\n        <button onClick={randomizeGrid}>\n          {stopTime ? 'Play again' : 'Reset'}\n        </button>\n      </div>\n      <div\n        className=\"CanvasContainer\"\n        style={{ height: size, width: size }}\n      >\n        <canvas style={{ height: size, width: size }} ref={canvasRef} />\n      </div>\n      <a href=\"https://twitter.com/ianburgan\" className=\"ContactLink\">\n        Contact me\n      </a>\n      <div className=\"Instructions\">\n        Arrow keys to move, desktop only\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}